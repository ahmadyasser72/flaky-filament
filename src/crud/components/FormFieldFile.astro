---
import prettyBytes from "pretty-bytes";

export interface Props {
  label: string;
  name: string;
  value?: string;
  class?: string;
}

const { label, name, value, class: className } = Astro.props;

export const initializeFileSelector = (name: string) => {
  const fileInput = document.getElementById(name);
  const fileSelector = document.getElementById(`${name}-file-selector`);
  const fileDetail = document.getElementById(`${name}-file-detail`);

  if (!(fileInput instanceof HTMLInputElement) || !fileSelector || !fileDetail)
    return;

  fileInput.addEventListener("input", () => {
    fileSelector.innerText = "Ubah file";

    const file = fileInput.files![0];
    fileDetail.innerText =
      fileDetail.title = `(${prettyBytes(file.size)}) ${file.name}`;
    fileDetail.classList.remove("hidden");
  });
};
---

<div class:list={["flex flex-col gap-1 max-sm:min-h-40", className]}>
  <label for={name} class="label">{label}</label>
  <label
    for={name}
    class:list={[
      "pointer-events-none relative flex-1 px-8 py-4 sm:py-6",
      value === undefined && "*:pointer-events-auto",
    ]}
    transition:persist
  >
    <input
      id={name}
      name={name}
      type="file"
      class="input absolute inset-0 -z-10 h-full text-transparent"
      transition:persist
    />

    <div class="flex h-full flex-col gap-y-2">
      <span
        id={`${name}-file-selector`}
        class:list={[
          "btn btn-soft w-full flex-1",
          value !== undefined && "btn-disabled",
        ]}>Pilih file</span
      >
      <span
        id={`${name}-file-detail`}
        class:list={[
          "line-clamp-2 max-w-48 text-xs font-medium text-wrap break-all select-none sm:max-w-32",
          value === undefined && "hidden",
        ]}>{value}</span
      >
    </div>
  </label>
  <p id={`${name}-error`} class="text-error text-xs opacity-0">-</p>
</div>
