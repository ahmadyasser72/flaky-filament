---
import { formatDate } from "$lib/date";

import InputField, {
	type Props as InputFieldProps,
} from "~/components/InputField.astro";
import { flash, flashRedirect } from "~/components/svelte/app-toast.svelte";
import AppLayout from "~/layouts/AppLayout.astro";
import { getFormErrors, type FormErrors } from "~/lib/form";

const id = Astro.params.id!;
let formErrors: FormErrors = null;
if (Astro.request.method === "POST") {
	const url = Astro.locals.backend.rpc.sekretariat.arsip[":id"].$url({
		param: { id },
	});

	const response = (await Astro.locals.backend.fetch(url, {
		body: Astro.request.body,
		method: "PUT",
	})) as Awaited<
		ReturnType<
			(typeof Astro.locals.backend.rpc.sekretariat.arsip)[":id"]["$put"]
		>
	>;

	formErrors = await getFormErrors(response);
	if (formErrors) {
		Astro.response.status = 422;
	} else if (response.status === 200) {
		const { data } = await response.json();
		return flashRedirect({
			location: Astro.url.pathname.replace("update", "view"),
			type: "success",
			title: "Arsip",
			description: `Berhasil edit arsip! (id: ${data.id})`,
		});
	} else {
		const { error } = await response.json();
		flash(Astro, {
			type: "error",
			title: "Gagal edit arsip.",
			description: error,
		});
	}
}

const response = await Astro.locals.backend.rpc.sekretariat.arsip[":id"].$get({
	param: { id },
});

if (response.status === 404)
	return Astro.redirect("/dashboard/sekretariat/arsip");

const { data } = await response.json();
const title = `Edit Arsip #${id.slice(0, 10)}`;

const fields = [
	{
		label: "Judul",
		name: "judul",
		type: "text",
		placeholder: "Masukkan judul",
		autocomplete: "off",
		required: true,
		value: data.judul,
	},
	{
		label: "Tanggal",
		name: "tanggal",
		type: "date",
		placeholder: "Masukkan Tanggal",
		max: formatDate(new Date()),
		autocomplete: "off",
		required: true,
		value: formatDate(data.tanggal),
	},
	{
		label: "File",
		name: "file",
		type: "file",
		accept: "application/pdf",
		placeholder: "File PDF",
	},
] as const satisfies InputFieldProps[];
---

<AppLayout {title}>
	<div class="mx-auto flex w-full max-w-md flex-col justify-center">
		<div class="flex items-center justify-between">
			<div class="text-xl font-semibold">{title}</div>
		</div>

		<div class="divider"></div>

		<form
			method="post"
			up-submit
			up-disable
			enctype="multipart/form-data"
			class="grid *:not-first:mt-4"
		>
			{
				fields.map((props) => (
					<InputField
						{...props}
						id={`arsip-${props.name}`}
						error={formErrors?.[props.name]}
					/>
				))
			}

			<div class="flex justify-between">
				<button type="submit" class="btn btn-primary"> Simpan </button>
				<a
					href={Astro.url.pathname.replace("update", "view")}
					up-follow
					class="btn btn-outline">Batal</a
				>
			</div>
		</form>
	</div>
</AppLayout>
