---
import { formatDate } from "$lib/date";

import InputField, {
	type Props as InputFieldProps,
} from "~/components/InputField.astro";
import { flash, flashRedirect } from "~/components/svelte/app-toast.svelte";
import AppLayout from "~/layouts/AppLayout.astro";
import { getFormErrors, type FormErrors } from "~/lib/form";

let formErrors: FormErrors = null;
if (Astro.request.method === "POST") {
	const url = Astro.locals.backend.rpc.sekretariat.arsip.$url();

	const response = (await Astro.locals.backend.fetch(url, {
		body: Astro.request.body,
		method: "POST",
	})) as Awaited<
		ReturnType<typeof Astro.locals.backend.rpc.sekretariat.arsip.$post>
	>;

	formErrors = await getFormErrors(response);
	if (formErrors) {
		Astro.response.status = 422;
	} else if (response.ok) {
		const { data } = await response.json();
		return flashRedirect({
			location: "/dashboard/sekretariat/arsip",
			type: "success",
			title: "Arsip",
			description: `Pembuatan arsip berhasil! (id: ${data.id})`,
		});
	} else {
		// @ts-expect-error handle generic error regardless
		const { error } = await response.json();
		flash(Astro, {
			type: "error",
			title: "Gagal membuat arsip",
			description: error,
		});
	}
}

const fields = [
	{
		label: "Judul",
		name: "judul",
		type: "text",
		placeholder: "Masukkan judul",
		autocomplete: "off",
		required: true,
	},
	{
		label: "Tanggal",
		name: "tanggal",
		type: "date",
		placeholder: "Masukkan Tanggal",
		max: formatDate(new Date().toISOString()),
		autocomplete: "off",
		required: true,
	},
	{
		label: "File",
		name: "file",
		type: "file",
		accept: "application/pdf",
		placeholder: "File PDF",
		required: true,
	},
] satisfies InputFieldProps[];
---

<AppLayout title="Sekretariat - Arsip Baru">
	<div class="mx-auto flex w-full max-w-md flex-col justify-center">
		<div class="flex items-center justify-between">
			<div class="text-xl font-semibold">Buat Arsip</div>
		</div>

		<div class="divider"></div>

		<form
			method="post"
			up-submit
			up-disable
			enctype="multipart/form-data"
			class="grid *:not-first:mt-4"
		>
			{
				fields.map((props) => (
					<InputField
						{...props}
						id={`arsip-${props.name}`}
						error={formErrors?.[props.name]}
					/>
				))
			}

			<div class="flex justify-between">
				<button type="submit" class="btn btn-primary"> Simpan </button>
				<a
					href="/dashboard/sekretariat/arsip"
					up-follow
					up-dismiss
					class="btn btn-outline">Batal</a
				>
			</div>
		</form>
	</div>
</AppLayout>
